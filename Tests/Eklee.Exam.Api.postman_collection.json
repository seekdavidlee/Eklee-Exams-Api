{
	"info": {
		"_postman_id": "e5d22750-295a-42bd-8bca-d80aa8584865",
		"name": "Eklee.Exam.Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "GetToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7234251e-3adb-4b61-9d3e-339f0b68ecd8",
								"exec": [
									"(pm.environment.get(\"isRemote\") ? pm.test : pm.test.skip)(\"Contains access token\", function () {",
									"",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.access_token).not.equal(null);",
									"    pm.environment.set(\"access_token\", jsonData.access_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "aff2cf28-5d4f-4357-8e60-e226e0e79565",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{resource_id}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{tenant_id}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{tenant_id}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetSchema",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5dab6571-3ead-40f8-9049-95fafe47e5a2",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":\"IntrospectionQuery\",\"variables\":{},\"query\":\"query IntrospectionQuery {\\n  __schema {\\n    queryType {\\n      name\\n    }\\n    mutationType {\\n      name\\n    }\\n    subscriptionType {\\n      name\\n    }\\n    types {\\n      ...FullType\\n    }\\n    directives {\\n      name\\n      description\\n      locations\\n      args {\\n        ...InputValue\\n      }\\n    }\\n  }\\n}\\n\\nfragment FullType on __Type {\\n  kind\\n  name\\n  description\\n  fields(includeDeprecated: true) {\\n    name\\n    description\\n    args {\\n      ...InputValue\\n    }\\n    type {\\n      ...TypeRef\\n    }\\n    isDeprecated\\n    deprecationReason\\n  }\\n  inputFields {\\n    ...InputValue\\n  }\\n  interfaces {\\n    ...TypeRef\\n  }\\n  enumValues(includeDeprecated: true) {\\n    name\\n    description\\n    isDeprecated\\n    deprecationReason\\n  }\\n  possibleTypes {\\n    ...TypeRef\\n  }\\n}\\n\\nfragment InputValue on __InputValue {\\n  name\\n  description\\n  type {\\n    ...TypeRef\\n  }\\n  defaultValue\\n}\\n\\nfragment TypeRef on __Type {\\n  kind\\n  name\\n  ofType {\\n    kind\\n    name\\n    ofType {\\n      kind\\n      name\\n      ofType {\\n        kind\\n        name\\n        ofType {\\n          kind\\n          name\\n          ofType {\\n            kind\\n            name\\n            ofType {\\n              kind\\n              name\\n              ofType {\\n                kind\\n                name\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SimpleCRUD",
			"item": [
				{
					"name": "CreateCandidate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c78a7620-0fa4-41a7-9cad-dac762062890",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Query returns with match\", function () {",
									"    var jsonData = pm.response.json();",
									"    var id = pm.environment.get(\"createCandidateId\");",
									"    pm.expect(jsonData.data.createCandidate.id).to.eql(id);",
									"    pm.expect(jsonData.data.createCandidate.name).to.eql(\"Jack Box\");",
									"    pm.expect(jsonData.data.createCandidate.active).to.eql(true);",
									"    pm.expect(jsonData.data.createCandidate.type).to.eql(\"Full-time professional\");",
									"    pm.expect(jsonData.data.createCandidate.created).to.eql(\"2016-12-27\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f83f6262-b17e-458b-aa22-037213d44b0a",
								"exec": [
									"var uuid = require('uuid');",
									"pm.environment.set(\"createCandidateId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  createCandidate(candidate: {id: \\\"{{createCandidateId}}\\\", active: true, created: \\\"2016-12-27\\\", name: \\\"Jack Box\\\", type: \\\"Full-time professional\\\"}) {\\n    id\\n    name\\n    type\\n    created\\n    active\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateExamTemplate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35c8c12c-5cfe-42d0-8de3-66862da96f49",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f3d6edef-fd7e-4167-b32d-9aafbbf3a69b",
								"exec": [
									"var uuid = require('uuid');",
									"pm.environment.set(\"createExamTemplateId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  createExamTemplate(examtemplate: {id: \\\"{{createExamTemplateId}}\\\", name: \\\"bar v1\\\", category: \\\"test2\\\", created: \\\"2018-01-01\\\", effective: \\\"2018-12-01\\\", expires: \\\"2019-12-31\\\"}) {\\n    id\\n    name\\n    category\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateExam",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35c8c12c-5cfe-42d0-8de3-66862da96f49",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "50d20ab9-c5ba-41d9-9739-f7f81ba8e22d",
								"exec": [
									"var uuid = require('uuid');",
									"pm.environment.set(\"createExamId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  createExam(exam: {id: \\\"{{createExamId}}\\\", name: \\\"bar\\\", category: \\\"test2\\\", taken: \\\"2017-11-01\\\", candidateId: \\\"{{createCandidateId}}\\\", examTemplateId: \\\"{{createExamTemplateId}}\\\"}) {\\n    id\\n    name\\n    category\\n    taken\\n    candidateId\\n    examTemplateId\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "QueryExam (getExamById)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35c8c12c-5cfe-42d0-8de3-66862da96f49",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"{\\n  getExamById(id: {equal: \\\"{{createExamId}}\\\"}) {\\n    id\\n    name\\n    category\\n    taken\\n    candidateId\\n    examTemplateId\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "QueryExamOutput (getExamsByNameAndTaken)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35c8c12c-5cfe-42d0-8de3-66862da96f49",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"{\\n  getExamsByNameAndTaken(name: {contains: \\\"bar\\\"}, taken: {notEqual: \\\"2018-01-01\\\"}) {\\n    id\\n    category\\n    name\\n    taken\\n    candidate {\\n      id\\n      name\\n      active\\n    }\\n    examTemplate {\\n      id\\n      name\\n      category\\n    }\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateExam",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35c8c12c-5cfe-42d0-8de3-66862da96f49",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"{\\n  getExamById(id: {equal: \\\"C941233F-A5B0-4E10-B783-E9B91C6D9B9D\\\"}) {\\n    id\\n    name\\n    category\\n    taken\\n    candidateId\\n    examTemplateId\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "VerifyExamUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35c8c12c-5cfe-42d0-8de3-66862da96f49",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"{\\n  getExamById(id: {equal: \\\"C941233F-A5B0-4E10-B783-E9B91C6D9B9D\\\"}) {\\n    id\\n    name\\n    category\\n    taken\\n    candidateId\\n    examTemplateId\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SeedDatabase",
			"item": [
				{
					"name": "batchCreateCandidate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "929a7a0e-b78f-4fdf-ae79-2094882d03c4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  batchCreateCandidate(candidate: [{id: \\\"12E702ED-9CE0-4377-A622-1822E1E2C313\\\", name: \\\"Mandy Dance\\\", active: true, type: \\\"Student\\\", created: \\\"2018-12-12\\\"}, {id: \\\"A0BE1F44-ECDD-42A6-BC6F-71688331AB8F\\\", name: \\\"Phil Art\\\", active: true, type: \\\"Professional\\\", created: \\\"2019-12-12\\\"}, {id: \\\"04202445-F654-4540-A6A1-F06563A1DC36\\\", name: \\\"James Honda\\\", active: true, type: \\\"Professional\\\", created: \\\"2018-05-11\\\"}, {id: \\\"A1B742CB-A555-4719-9573-7148183961F5\\\", name: \\\"Henery James\\\", active: true, type: \\\"Professional\\\", created: \\\"2018-12-21\\\"}, {id: \\\"BBDC4842-78B6-445D-9935-81F92F5DAA1F\\\", name: \\\"David Port\\\", active: true, type: \\\"Student\\\", created: \\\"2018-01-10\\\"}]) {\\n    id\\n    name\\n    created\\n    active\\n    type\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "batchCreateExam",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "929a7a0e-b78f-4fdf-ae79-2094882d03c4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  batchCreateExam(exam: [{id: \\\"5DE5BB86-1B31-4E31-BF10-B3E1C2967EEC\\\", candidateId: \\\"12E702ED-9CE0-4377-A622-1822E1E2C313\\\", category: \\\"Technology\\\", name: \\\"C# 7.0\\\", taken: \\\"2019-01-01\\\", examTemplateId: \\\"9925E273-D9D2-4399-8A8F-64B4CE531788\\\"}, {id: \\\"4735C40E-0B8C-4DCD-9FAE-8B47DFF234FE\\\", candidateId: \\\"A0BE1F44-ECDD-42A6-BC6F-71688331AB8F\\\", category: \\\"Art\\\", name: \\\"History of Greek Art\\\", taken: \\\"2018-06-09\\\", examTemplateId: \\\"BB977447-00A2-45BE-9045-4A3804E3B011\\\"}, {id: \\\"3DD0643D-FA9C-4F21-B9F2-0C505224F63C\\\", candidateId: \\\"04202445-F654-4540-A6A1-F06563A1DC36\\\", category: \\\"Cars\\\", name: \\\"Fixing Honda CRV 2011\\\", taken: \\\"2019-01-02\\\", examTemplateId: \\\"F1933BA7-6873-4970-8214-83475951E7A6\\\"}, {id: \\\"E6A9150B-FD42-4807-A45D-7101E4C5DFB2\\\", candidateId: \\\"A1B742CB-A555-4719-9573-7148183961F5\\\", category: \\\"Cars\\\", name: \\\"Fixing Ford F150\\\", taken: \\\"2019-01-03\\\", examTemplateId: \\\"AEFE15C5-C67E-4D9F-A556-246B72970080\\\"}, {id: \\\"09777B0B-05BC-4B22-BB13-1EBF7467CD8E\\\", candidateId: \\\"BBDC4842-78B6-445D-9935-81F92F5DAA1F\\\", category: \\\"Cars\\\", name: \\\"Fixing Ford F150\\\", taken: \\\"2019-01-02\\\", examTemplateId: \\\"AEFE15C5-C67E-4D9F-A556-246B72970080\\\"}, {id: \\\"C2758803-1439-4649-A3F1-8CDE072C8820\\\", candidateId: \\\"BBDC4842-78B6-445D-9935-81F92F5DAA1F\\\", category: \\\"Art\\\", name: \\\"Art of Mobile Phone Design\\\", taken: \\\"2019-01-02\\\", examTemplateId: \\\"6B9724F7-33F5-46C9-956F-F972ACFBB95A\\\"}, {id: \\\"B5650E27-A172-4FE5-9D9E-EF6B21FE9E0D\\\", candidateId: \\\"BBDC4842-78B6-445D-9935-81F92F5DAA1F\\\", category: \\\"Cars\\\", name: \\\"Fixing Honda CRV 2011\\\", taken: \\\"2019-01-02\\\", examTemplateId: \\\"F1933BA7-6873-4970-8214-83475951E7A6\\\"}]) {\\n    id\\n    candidateId\\n    category\\n    name\\n    taken\\n    examTemplateId\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "batchCreateExamTemplate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "929a7a0e-b78f-4fdf-ae79-2094882d03c4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  batchCreateExamTemplate(examtemplate: [{id: \\\"9925E273-D9D2-4399-8A8F-64B4CE531788\\\", category: \\\"Technology\\\", name: \\\"C# 7.0\\\", effective: \\\"2010-01-01\\\", expires: \\\"2020-12-31\\\", created: \\\"2016-12-01\\\"}, {id: \\\"BB977447-00A2-45BE-9045-4A3804E3B011\\\", category: \\\"Art\\\", name: \\\"History of Greek Art\\\", effective: \\\"2010-01-01\\\", expires: \\\"2020-12-31\\\", created: \\\"2016-12-01\\\"}, {id: \\\"F1933BA7-6873-4970-8214-83475951E7A6\\\", category: \\\"Cars\\\", name: \\\"Fixing Honda CRV 2011\\\", effective: \\\"2010-01-01\\\", expires: \\\"2020-12-31\\\", created: \\\"2016-12-01\\\"}, {id: \\\"AEFE15C5-C67E-4D9F-A556-246B72970080\\\", category: \\\"Cars\\\", name: \\\"Fixing Ford F150\\\", effective: \\\"2010-01-01\\\", expires: \\\"2018-12-31\\\", created: \\\"2016-12-01\\\"}, {id: \\\"6B9724F7-33F5-46C9-956F-F972ACFBB95A\\\", category: \\\"Art\\\", name: \\\"Art of Mobile Phone Design\\\", effective: \\\"2010-01-01\\\", expires: \\\"2019-12-31\\\", created: \\\"2016-12-01\\\"}]) {\\n    id\\n    category\\n    name\\n    effective\\n    expires\\n    created\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"item": [
				{
					"name": "DeleteAllCandidates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c04fa6d4-f9cc-422b-8f76-541cff3bcb7d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  deleteAllCandidate {\\n    message\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAllExams",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c04fa6d4-f9cc-422b-8f76-541cff3bcb7d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  deleteAllExam {\\n    message\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAllCandidateSearches",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c04fa6d4-f9cc-422b-8f76-541cff3bcb7d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  deleteAllCandidateSearch {\\n    message\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAllExamTemplates",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c04fa6d4-f9cc-422b-8f76-541cff3bcb7d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  deleteAllExamTemplate {\\n    message\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAllExamTemplateSearches",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c04fa6d4-f9cc-422b-8f76-541cff3bcb7d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  deleteAllExamTemplateSearch {\\n    message\\n  }\\n}\\n\"}"
						},
						"url": {
							"raw": "{{endpoint}}/api/graph",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"graph"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a460ca94-64e8-4811-84f5-89f3cc83bc4e",
				"type": "text/javascript",
				"exec": [
					"var isRemote = pm.environment.get(\"endpoint\").indexOf(\"http://localhost\") < 0;",
					"pm.environment.set(\"isRemote\", isRemote);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "31e3d054-66f6-431d-bfdc-56256d40ec00",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}