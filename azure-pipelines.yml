pool:
  vmImage: 'vs2017-win2016'
  
variables:
- group: Deploy
- group: Postman

steps:

- task: PowerShell@2
  inputs:
    displayName: 'Build app and configure stack variables'
    targetType: 'inline'
    script: |
      dotnet publish --configuration $env:BuildConfiguration --output $env:Build_ArtifactStagingDirectory
      $zipLocation = "$env:Build_ArtifactStagingDirectory\$env:Build_BuildNumber.zip"
      Compress-Archive -Path $env:Build_ArtifactStagingDirectory\* -DestinationPath $zipLocation
      $path="env:$env:Build_SourceBranchName" + "_AppPrefix"
      $stackName = (get-item $path -ErrorAction SilentlyContinue).Value
      if (!$stackName) { $stackName = $env:AppPrefix + $env:Build_SourceBranchName }
      $stackName = $stackName.ToLower().Replace("-", "")
      Write-Host "stackName: $stackName"
      Write-Host "##vso[task.setvariable variable=stackName;]$stackName"
      Write-Host "##vso[task.setvariable variable=zipLocation;]$zipLocation"

- task: AzureResourceGroupDeployment@2
  inputs:
    displayName: 'Deploy stack resources'
    azureSubscription: '$(ServiceConnectionName)'
    resourceGroupName: '$(stackName)'
    location: '$(Location)'
    templateLocation: 'Linked artifact'
    csmFile: 'deployment\template.json'
    overrideParameters: '-stackName $(stackName) -clientId $(ClientId)'

- task: AzureRmWebAppDeployment@4
  inputs:
    displayName: 'Deploy app to stack slot'
    connectionType: 'AzureRM'
    azureSubscription: '$(ServiceConnectionName)'
    webAppName: '$(stackName)'
    resourceGroupName: '$(stackName)'
    slotName: 'staging'
    appType: 'functionApp'
    packageForLinux: '$(zipLocation)'

- task: PowerShell@2
  inputs:
    displayName: 'Run integration tests'
    targetType: 'inline'
    script: |
      npm install newman
      $postman = @{
        values=@({
            key="endpoint";
            value="https://$stackName.azurewebsites.net";
        }, 
        {
            key="client_secret";
            value="$env:Postman_client_secret";
        }, 
        {
            key="client_id";
            value="$env:Postman_client_id";
        }, 
        {
            key="resource_id";
            value="$env:Postman_resource_id";
        }, 
        {
            key="tenant_id";
            value="$env:Postman_tenant_id";
        })
      }
      Write-Host $postman
      $postman | ConvertTo-Json -depth 100 | Out-File postman_environment.json
      node_modules\.bin\newman run tests\Eklee.Exam.Api.postman_collection.json -e postman_environment.json